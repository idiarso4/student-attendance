Untuk menjalankan aplikasi Spring Boot, kita perlu memastikan beberapa hal terlebih dahulu:

Pastikan Anda memiliki proyek Spring Boot yang sudah dibuat
Pastikan JDK sudah terinstal
Pastikan Maven atau Gradle sudah terinstal (tergantung build tool yang digunakan)
Untuk membuat proyek baru, Anda bisa:

Kunjungi Spring Initializr
Pilih:
Project: Maven
Language: Java
Spring Boot version: (versi terbaru yang stabil)
Group: com.example
Artifact: demo
Dependencies: Spring Web, Spring Data JPA (jika diperlukan)
Klik "Generate" untuk mengunduh proyek
Setelah Anda memiliki proyek, Anda bisa:

Extract file zip yang diunduh
Buka terminal/command prompt
Navigasi ke direktori proyek
Jalankan perintah:

----
"mvn spring-boot:run"

===============================

Untuk menginstal dan menggunakan ekstensi di editor kode seperti Visual Studio Code, Anda dapat mengikuti langkah-langkah berikut:

Menginstal Ekstensi di Visual Studio Code
Buka Visual Studio Code:
Jalankan aplikasi Visual Studio Code di komputer Anda.
Buka Panel Ekstensi:
Klik pada ikon ekstensi di sidebar kiri (ikon kotak dengan empat kotak kecil di dalamnya) atau tekan Ctrl + Shift + X.
Cari Ekstensi:
Di kotak pencarian, ketik nama ekstensi yang ingin Anda instal. Misalnya, untuk Spring Boot, Anda bisa mencari "Spring Boot Extension Pack".
Instal Ekstensi:
Temukan ekstensi yang relevan dalam daftar hasil pencarian.
Klik tombol Install di sebelah ekstensi untuk menginstalnya.
Menyusun Proyek:
Setelah menginstal ekstensi, Anda bisa mulai menggunakan fitur-fitur yang ditawarkan, seperti Spring Initializr, Spring Boot Dashboard, dan lainnya.
Menggunakan Ekstensi
Buat Proyek Baru:
Setelah menginstal ekstensi, Anda dapat menggunakan Spring Initializr untuk membuat proyek baru langsung dari Visual Studio Code.
Menjalankan Aplikasi:
Anda dapat menjalankan aplikasi Spring Boot dari terminal yang disediakan oleh Visual Studio Code dengan perintah mvn spring-boot:run.
Mengelola Proyek:
Gunakan Spring Boot Dashboard untuk mengelola dan menjalankan aplikasi Anda dengan lebih mudah.


LANGKAH IMPLEMENTASI SISTEM ABSENSI DENGAN POSTGRESQL

1. Setup Database PostgreSQL:
   - Install PostgreSQL dan pgAdmin
   - Buat database baru bernama 'attendance'
   - Buat tabel dengan query:
     CREATE TABLE student_attendance (
         id SERIAL PRIMARY KEY,
         student_name VARCHAR(100) NOT NULL,
         student_id VARCHAR(50) NOT NULL,
         date DATE NOT NULL,
         status VARCHAR(20) NOT NULL,
         created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
     );

2. Konfigurasi Koneksi Database:
   - Update DatabaseUtil.java dengan kredensial PostgreSQL:
     private static final String URL = "jdbc:postgresql://localhost:5432/attendance";
     private static final String USER = "postgres";
     private static final String PASSWORD = "root";

3. Implementasi Model:
   - Buat class AttendanceRecord.java untuk menyimpan data absensi
   - Class ini memiliki properti: studentName, studentId, date, status

4. Implementasi Controller:
   - Update AttendanceController.java dengan fungsi CRUD
   - Tambahkan fungsi markPresent() dan markAbsent()
   - Implementasi loadData() untuk menampilkan data di TableView

5. Testing:
   - Jalankan aplikasi dengan 'mvn javafx:run'
   - Test fungsi absensi dengan mengisi:
     * Student Name
     * Student ID
     * Date
   - Klik 'Mark Present' atau 'Mark Absent'
   - Verifikasi data tersimpan di database

6. Push ke GitHub:
   - Inisialisasi git repository: git init
   - Add semua file: git add .
   - Commit perubahan: git commit -m "Update: Implement attendance system with PostgreSQL integration"
   - Push ke GitHub dengan token:
     git push https://[token]@github.com/[username]/[repo].git main

Catatan:
- Pastikan PostgreSQL berjalan di port 5432
- Password database disesuaikan dengan instalasi lokal
- Backup database secara berkala